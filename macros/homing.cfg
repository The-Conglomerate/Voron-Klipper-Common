#############################
#       Homing Macros       #
#############################
#   Source: https://github.com/zztopper/voron_v2.4_1030/blob/main/homing.cfg
#############################
[gcode_macro _CG28]
description: Helper: conditional homing
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== _CG28 ====")}
    {% endif %}

    {% if printer.toolhead.homed_axes != "xyz" %}
        G90
        G28
    {% endif %}

[gcode_macro _SET_Z_CURRENT]
description: Helper: Set Z-drive motor current
variable_last_val: "CONFIG"
gcode:
    # command params
    {% set val = params.VAL|default("CONFIG")|upper %}
    {% set respond = params.RESPOND|default(default_respond)|int %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set z_home_current  = printer["gcode_macro _PRINTER_VARIABLE"].homing.z_home_current|default(0.3)|float %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== _SET_Z_CURRENT ====")}
        {action_respond_info("val: '%s'" % (val))}
        {action_respond_info("respond: '%s'" % (respond))}
        {action_respond_info("z_home_current: '%s'" % (z_home_current))}
        {action_respond_info("===============")}
    {% endif %}

    {% if val == "HOME" %}
        {% set z_run  = z_home_current %}
        {% set z_hold = z_home_current %}
    {% else %}
        {% if "tmc2209 stepper_z" in printer.configfile.settings %}
            {% set z_run  = printer.configfile.settings["tmc2209 stepper_z"].run_current %}
            {% set z_hold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %}
        {% elif "tmc5160 stepper_z" in printer.configfile.settings %}
            {% set z_run  = printer.configfile.settings["tmc5160 stepper_z"].run_current %}
            {% set z_hold = printer.configfile.settings["tmc5160 stepper_z"].hold_current %}
        {% endif %}
    {% endif %}

    {% if val != last_val %}
        SET_GCODE_VARIABLE MACRO=_SET_Z_CURRENT VARIABLE=last_val VALUE='"{val}"'
        {% if respond == 1 %}
            {action_respond_info("Home&Probe: RunCur %.2fA rms HoldCur %.2fA rms" % (z_run|float, z_hold|float))}
        {% endif %}
        SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_run} HOLDCURRENT={z_hold}
        SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_run} HOLDCURRENT={z_hold}
        SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_run} HOLDCURRENT={z_hold}
        SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_run} HOLDCURRENT={z_hold}
        M400
    {% endif %}

[gcode_macro _SET_ACCEL]
description: Helper: Set accel and accel_to_decel value
variable_last_val: "CONFIG"
gcode:
    # command params
    {% set val = params.VAL|default("CONFIG")|upper %}
    {% set respond = params.RESPOND|default(default_respond)|int %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set home_accel = printer["gcode_macro _PRINTER_VARIABLE"].homing.home_accel|default(1200)|int %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== _SET_Z_CURRENT ====")}
        {action_respond_info("val: '%s'" % (val))}
        {action_respond_info("respond: '%s'" % (respond))}
        {action_respond_info("home_accel: '%s'" % (home_accel))}
        {action_respond_info("===============")}
    {% endif %}

    {% if val == "HOME" %}
        {% set accel = home_accel %}
        {% set accel_to_decel = home_accel|int / 2 %}
    {% else %}
        {% set accel = printer.configfile.settings.printer.max_accel %}
        {% set accel_to_decel = printer.configfile.settings.printer.max_accel_to_decel %}
    {% endif %}
    {% if val != last_val %}
        SET_GCODE_VARIABLE MACRO=_SET_ACCEL VARIABLE=last_val VALUE='"{val}"'
    {% if respond == 1 %}
        {action_respond_info("VELOCITY_LIMIT set ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}
    {% endif %}
        SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel} RESPOND=0
    {% endif %}
